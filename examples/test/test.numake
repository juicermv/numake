function has_value (tab, val) -- Should probably implement this later
    for index, value in ipairs(tab) do
        if value == val then
            return true
        end
    end
    return false
end

if string.find(target, "msvc") ~= nil then
    msvc = true
end

i686 = false
if string.find(target, "i686") ~= nil then
    i686 = true
end

mingw = false

if arguments ~= nil and has_value(arguments, "mingw") then
    mingw = true
end

set_compiler_flags({"--verbose"})
set_linker_flags({"--verbose"})

if not msvc then
    if toolset_compiler == nil then
        if mingw and i686 then
            toolset_compiler = "i686-w64-mingw32-g++"
        elseif mingw and not i686 then
            toolset_compiler = "x86_64-w64-mingw32-g++"
        else
            toolset_compiler = "g++"
        end
    end

    if toolset_linker == nil then
        if mingw and i686 then
            toolset_linker = "i686-w64-mingw32-g++"
        elseif mingw and not i686 then
            toolset_linker = "x86_64-w64-mingw32-g++"
        else
            toolset_linker = "g++"
        end
    end


    if not mingw then
        output = "test"
        add_lib("SDL2")
    else
        output = "test.exe"
        sdl_path = workspace_download_zip("https://github.com/libsdl-org/SDL/releases/download/release-2.30.2/SDL2-devel-2.30.2-mingw.zip") .. "/SDL2-2.30.2"

        if i686 then
            sdl_path = sdl_path .. "/i686-w64-mingw32"
        else
            sdl_path = sdl_path .. "/x86_64-w64-mingw32"
        end

        add_include_path(sdl_path .. "/include")
        add_lib_path(sdl_path .. "/lib")

        set_libs({
            "mingw32",
            "SDL2",
            "SDL2main",
            "m",
            "dinput8",
            "dxguid",
            "dxerr8",
            "user32",
            "gdi32",
            "winmm",
            "imm32",
            "ole32",
            "oleaut32",
            "shell32",
            "setupapi",
            "version",
            "uuid"
        })

        flags = {}
        if not i686 then
            flags = {"--verbose", "-mwindows", "-Wl,--nxcompat", "-Wl,--high-entropy-va", "-static", "-Wl,-Bstatic"}
        else
            flags = {"--verbose", "-mwindows", "-Wl,--nxcompat", "-static", "-Wl,-Bstatic"}
        end
        set_linker_flags(flags)
        set_compiler_flags(flags)

        add_asset(sdl_path .. "/bin/SDL2.dll", "SDL2.dll")
    end
else
    print("MSVC is not currently supported for this test!")
end

add_file("main.cpp")